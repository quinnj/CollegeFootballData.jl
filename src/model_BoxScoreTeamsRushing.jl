# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct BoxScoreTeamsRushing <: SwaggerModel
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    powerSuccess::Any # spec type: Union{ Nothing, Float32 } # spec name: powerSuccess
    stuffRate::Any # spec type: Union{ Nothing, Float32 } # spec name: stuffRate
    lineYards::Any # spec type: Union{ Nothing, Float32 } # spec name: lineYards
    lineYardsAverage::Any # spec type: Union{ Nothing, Float32 } # spec name: lineYardsAverage
    secondLevelYards::Any # spec type: Union{ Nothing, Int32 } # spec name: secondLevelYards
    secondLevelYardsAverage::Any # spec type: Union{ Nothing, Float32 } # spec name: secondLevelYardsAverage
    openFieldYards::Any # spec type: Union{ Nothing, Int32 } # spec name: openFieldYards
    openFieldYardsAverage::Any # spec type: Union{ Nothing, Float32 } # spec name: openFieldYardsAverage

    function BoxScoreTeamsRushing(;team=nothing, powerSuccess=nothing, stuffRate=nothing, lineYards=nothing, lineYardsAverage=nothing, secondLevelYards=nothing, secondLevelYardsAverage=nothing, openFieldYards=nothing, openFieldYardsAverage=nothing)
        o = new()
        validate_property(BoxScoreTeamsRushing, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(BoxScoreTeamsRushing, Symbol("powerSuccess"), powerSuccess)
        setfield!(o, Symbol("powerSuccess"), powerSuccess)
        validate_property(BoxScoreTeamsRushing, Symbol("stuffRate"), stuffRate)
        setfield!(o, Symbol("stuffRate"), stuffRate)
        validate_property(BoxScoreTeamsRushing, Symbol("lineYards"), lineYards)
        setfield!(o, Symbol("lineYards"), lineYards)
        validate_property(BoxScoreTeamsRushing, Symbol("lineYardsAverage"), lineYardsAverage)
        setfield!(o, Symbol("lineYardsAverage"), lineYardsAverage)
        validate_property(BoxScoreTeamsRushing, Symbol("secondLevelYards"), secondLevelYards)
        setfield!(o, Symbol("secondLevelYards"), secondLevelYards)
        validate_property(BoxScoreTeamsRushing, Symbol("secondLevelYardsAverage"), secondLevelYardsAverage)
        setfield!(o, Symbol("secondLevelYardsAverage"), secondLevelYardsAverage)
        validate_property(BoxScoreTeamsRushing, Symbol("openFieldYards"), openFieldYards)
        setfield!(o, Symbol("openFieldYards"), openFieldYards)
        validate_property(BoxScoreTeamsRushing, Symbol("openFieldYardsAverage"), openFieldYardsAverage)
        setfield!(o, Symbol("openFieldYardsAverage"), openFieldYardsAverage)
        o
    end
end # type BoxScoreTeamsRushing

const _property_map_BoxScoreTeamsRushing = Dict{Symbol,Symbol}(Symbol("team")=>Symbol("team"), Symbol("powerSuccess")=>Symbol("powerSuccess"), Symbol("stuffRate")=>Symbol("stuffRate"), Symbol("lineYards")=>Symbol("lineYards"), Symbol("lineYardsAverage")=>Symbol("lineYardsAverage"), Symbol("secondLevelYards")=>Symbol("secondLevelYards"), Symbol("secondLevelYardsAverage")=>Symbol("secondLevelYardsAverage"), Symbol("openFieldYards")=>Symbol("openFieldYards"), Symbol("openFieldYardsAverage")=>Symbol("openFieldYardsAverage"))
const _property_types_BoxScoreTeamsRushing = Dict{Symbol,String}(Symbol("team")=>"String", Symbol("powerSuccess")=>"Float32", Symbol("stuffRate")=>"Float32", Symbol("lineYards")=>"Float32", Symbol("lineYardsAverage")=>"Float32", Symbol("secondLevelYards")=>"Int32", Symbol("secondLevelYardsAverage")=>"Float32", Symbol("openFieldYards")=>"Int32", Symbol("openFieldYardsAverage")=>"Float32")
Base.propertynames(::Type{ BoxScoreTeamsRushing }) = collect(keys(_property_map_BoxScoreTeamsRushing))
Swagger.property_type(::Type{ BoxScoreTeamsRushing }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BoxScoreTeamsRushing[name]))}
Swagger.field_name(::Type{ BoxScoreTeamsRushing }, property_name::Symbol) =  _property_map_BoxScoreTeamsRushing[property_name]

function check_required(o::BoxScoreTeamsRushing)
    true
end

function validate_property(::Type{ BoxScoreTeamsRushing }, name::Symbol, val)
end
