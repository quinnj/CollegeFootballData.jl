# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct RankingWeek <: SwaggerModel
    season::Any # spec type: Union{ Nothing, Int32 } # spec name: season
    seasonType::Any # spec type: Union{ Nothing, String } # spec name: seasonType
    week::Any # spec type: Union{ Nothing, Int32 } # spec name: week
    polls::Any # spec type: Union{ Nothing, Vector{RankingWeekPolls} } # spec name: polls

    function RankingWeek(;season=nothing, seasonType=nothing, week=nothing, polls=nothing)
        o = new()
        validate_property(RankingWeek, Symbol("season"), season)
        setfield!(o, Symbol("season"), season)
        validate_property(RankingWeek, Symbol("seasonType"), seasonType)
        setfield!(o, Symbol("seasonType"), seasonType)
        validate_property(RankingWeek, Symbol("week"), week)
        setfield!(o, Symbol("week"), week)
        validate_property(RankingWeek, Symbol("polls"), polls)
        setfield!(o, Symbol("polls"), polls)
        o
    end
end # type RankingWeek

const _property_map_RankingWeek = Dict{Symbol,Symbol}(Symbol("season")=>Symbol("season"), Symbol("seasonType")=>Symbol("seasonType"), Symbol("week")=>Symbol("week"), Symbol("polls")=>Symbol("polls"))
const _property_types_RankingWeek = Dict{Symbol,String}(Symbol("season")=>"Int32", Symbol("seasonType")=>"String", Symbol("week")=>"Int32", Symbol("polls")=>"Vector{RankingWeekPolls}")
Base.propertynames(::Type{ RankingWeek }) = collect(keys(_property_map_RankingWeek))
Swagger.property_type(::Type{ RankingWeek }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RankingWeek[name]))}
Swagger.field_name(::Type{ RankingWeek }, property_name::Symbol) =  _property_map_RankingWeek[property_name]

function check_required(o::RankingWeek)
    true
end

function validate_property(::Type{ RankingWeek }, name::Symbol, val)
end
