# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PlayerGamePPAAveragePPA <: SwaggerModel
    all::Any # spec type: Union{ Nothing, Float32 } # spec name: all
    pass::Any # spec type: Union{ Nothing, Float32 } # spec name: pass
    rush::Any # spec type: Union{ Nothing, Float32 } # spec name: rush

    function PlayerGamePPAAveragePPA(;all=nothing, pass=nothing, rush=nothing)
        o = new()
        validate_property(PlayerGamePPAAveragePPA, Symbol("all"), all)
        setfield!(o, Symbol("all"), all)
        validate_property(PlayerGamePPAAveragePPA, Symbol("pass"), pass)
        setfield!(o, Symbol("pass"), pass)
        validate_property(PlayerGamePPAAveragePPA, Symbol("rush"), rush)
        setfield!(o, Symbol("rush"), rush)
        o
    end
end # type PlayerGamePPAAveragePPA

const _property_map_PlayerGamePPAAveragePPA = Dict{Symbol,Symbol}(Symbol("all")=>Symbol("all"), Symbol("pass")=>Symbol("pass"), Symbol("rush")=>Symbol("rush"))
const _property_types_PlayerGamePPAAveragePPA = Dict{Symbol,String}(Symbol("all")=>"Float32", Symbol("pass")=>"Float32", Symbol("rush")=>"Float32")
Base.propertynames(::Type{ PlayerGamePPAAveragePPA }) = collect(keys(_property_map_PlayerGamePPAAveragePPA))
Swagger.property_type(::Type{ PlayerGamePPAAveragePPA }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PlayerGamePPAAveragePPA[name]))}
Swagger.field_name(::Type{ PlayerGamePPAAveragePPA }, property_name::Symbol) =  _property_map_PlayerGamePPAAveragePPA[property_name]

function check_required(o::PlayerGamePPAAveragePPA)
    true
end

function validate_property(::Type{ PlayerGamePPAAveragePPA }, name::Symbol, val)
end
