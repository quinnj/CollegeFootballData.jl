# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct AdvancedGameStatOffense <: SwaggerModel
    plays::Any # spec type: Union{ Nothing, Int32 } # spec name: plays
    drives::Any # spec type: Union{ Nothing, Int32 } # spec name: drives
    ppa::Any # spec type: Union{ Nothing, Float32 } # spec name: ppa
    totalPPA::Any # spec type: Union{ Nothing, Float32 } # spec name: totalPPA
    successRate::Any # spec type: Union{ Nothing, Float32 } # spec name: successRate
    explosiveness::Any # spec type: Union{ Nothing, Float32 } # spec name: explosiveness
    powerSuccess::Any # spec type: Union{ Nothing, Float32 } # spec name: powerSuccess
    stuffRate::Any # spec type: Union{ Nothing, Float32 } # spec name: stuffRate
    lineYards::Any # spec type: Union{ Nothing, Float32 } # spec name: lineYards
    lineYardsTotal::Any # spec type: Union{ Nothing, Float32 } # spec name: lineYardsTotal
    secondLevelYards::Any # spec type: Union{ Nothing, Float32 } # spec name: secondLevelYards
    secondLevelYardsTotal::Any # spec type: Union{ Nothing, Int32 } # spec name: secondLevelYardsTotal
    openFieldYards::Any # spec type: Union{ Nothing, Float32 } # spec name: openFieldYards
    openFieldYardsTotal::Any # spec type: Union{ Nothing, Int32 } # spec name: openFieldYardsTotal
    standardDowns::Any # spec type: Union{ Nothing, AdvancedGameStatOffenseStandardDowns } # spec name: standardDowns
    passingDowns::Any # spec type: Union{ Nothing, AdvancedGameStatOffenseStandardDowns } # spec name: passingDowns
    rushingPlays::Any # spec type: Union{ Nothing, AdvancedGameStatOffenseRushingPlays } # spec name: rushingPlays
    passingPlays::Any # spec type: Union{ Nothing, AdvancedGameStatOffenseRushingPlays } # spec name: passingPlays

    function AdvancedGameStatOffense(;plays=nothing, drives=nothing, ppa=nothing, totalPPA=nothing, successRate=nothing, explosiveness=nothing, powerSuccess=nothing, stuffRate=nothing, lineYards=nothing, lineYardsTotal=nothing, secondLevelYards=nothing, secondLevelYardsTotal=nothing, openFieldYards=nothing, openFieldYardsTotal=nothing, standardDowns=nothing, passingDowns=nothing, rushingPlays=nothing, passingPlays=nothing)
        o = new()
        validate_property(AdvancedGameStatOffense, Symbol("plays"), plays)
        setfield!(o, Symbol("plays"), plays)
        validate_property(AdvancedGameStatOffense, Symbol("drives"), drives)
        setfield!(o, Symbol("drives"), drives)
        validate_property(AdvancedGameStatOffense, Symbol("ppa"), ppa)
        setfield!(o, Symbol("ppa"), ppa)
        validate_property(AdvancedGameStatOffense, Symbol("totalPPA"), totalPPA)
        setfield!(o, Symbol("totalPPA"), totalPPA)
        validate_property(AdvancedGameStatOffense, Symbol("successRate"), successRate)
        setfield!(o, Symbol("successRate"), successRate)
        validate_property(AdvancedGameStatOffense, Symbol("explosiveness"), explosiveness)
        setfield!(o, Symbol("explosiveness"), explosiveness)
        validate_property(AdvancedGameStatOffense, Symbol("powerSuccess"), powerSuccess)
        setfield!(o, Symbol("powerSuccess"), powerSuccess)
        validate_property(AdvancedGameStatOffense, Symbol("stuffRate"), stuffRate)
        setfield!(o, Symbol("stuffRate"), stuffRate)
        validate_property(AdvancedGameStatOffense, Symbol("lineYards"), lineYards)
        setfield!(o, Symbol("lineYards"), lineYards)
        validate_property(AdvancedGameStatOffense, Symbol("lineYardsTotal"), lineYardsTotal)
        setfield!(o, Symbol("lineYardsTotal"), lineYardsTotal)
        validate_property(AdvancedGameStatOffense, Symbol("secondLevelYards"), secondLevelYards)
        setfield!(o, Symbol("secondLevelYards"), secondLevelYards)
        validate_property(AdvancedGameStatOffense, Symbol("secondLevelYardsTotal"), secondLevelYardsTotal)
        setfield!(o, Symbol("secondLevelYardsTotal"), secondLevelYardsTotal)
        validate_property(AdvancedGameStatOffense, Symbol("openFieldYards"), openFieldYards)
        setfield!(o, Symbol("openFieldYards"), openFieldYards)
        validate_property(AdvancedGameStatOffense, Symbol("openFieldYardsTotal"), openFieldYardsTotal)
        setfield!(o, Symbol("openFieldYardsTotal"), openFieldYardsTotal)
        validate_property(AdvancedGameStatOffense, Symbol("standardDowns"), standardDowns)
        setfield!(o, Symbol("standardDowns"), standardDowns)
        validate_property(AdvancedGameStatOffense, Symbol("passingDowns"), passingDowns)
        setfield!(o, Symbol("passingDowns"), passingDowns)
        validate_property(AdvancedGameStatOffense, Symbol("rushingPlays"), rushingPlays)
        setfield!(o, Symbol("rushingPlays"), rushingPlays)
        validate_property(AdvancedGameStatOffense, Symbol("passingPlays"), passingPlays)
        setfield!(o, Symbol("passingPlays"), passingPlays)
        o
    end
end # type AdvancedGameStatOffense

const _property_map_AdvancedGameStatOffense = Dict{Symbol,Symbol}(Symbol("plays")=>Symbol("plays"), Symbol("drives")=>Symbol("drives"), Symbol("ppa")=>Symbol("ppa"), Symbol("totalPPA")=>Symbol("totalPPA"), Symbol("successRate")=>Symbol("successRate"), Symbol("explosiveness")=>Symbol("explosiveness"), Symbol("powerSuccess")=>Symbol("powerSuccess"), Symbol("stuffRate")=>Symbol("stuffRate"), Symbol("lineYards")=>Symbol("lineYards"), Symbol("lineYardsTotal")=>Symbol("lineYardsTotal"), Symbol("secondLevelYards")=>Symbol("secondLevelYards"), Symbol("secondLevelYardsTotal")=>Symbol("secondLevelYardsTotal"), Symbol("openFieldYards")=>Symbol("openFieldYards"), Symbol("openFieldYardsTotal")=>Symbol("openFieldYardsTotal"), Symbol("standardDowns")=>Symbol("standardDowns"), Symbol("passingDowns")=>Symbol("passingDowns"), Symbol("rushingPlays")=>Symbol("rushingPlays"), Symbol("passingPlays")=>Symbol("passingPlays"))
const _property_types_AdvancedGameStatOffense = Dict{Symbol,String}(Symbol("plays")=>"Int32", Symbol("drives")=>"Int32", Symbol("ppa")=>"Float32", Symbol("totalPPA")=>"Float32", Symbol("successRate")=>"Float32", Symbol("explosiveness")=>"Float32", Symbol("powerSuccess")=>"Float32", Symbol("stuffRate")=>"Float32", Symbol("lineYards")=>"Float32", Symbol("lineYardsTotal")=>"Float32", Symbol("secondLevelYards")=>"Float32", Symbol("secondLevelYardsTotal")=>"Int32", Symbol("openFieldYards")=>"Float32", Symbol("openFieldYardsTotal")=>"Int32", Symbol("standardDowns")=>"AdvancedGameStatOffenseStandardDowns", Symbol("passingDowns")=>"AdvancedGameStatOffenseStandardDowns", Symbol("rushingPlays")=>"AdvancedGameStatOffenseRushingPlays", Symbol("passingPlays")=>"AdvancedGameStatOffenseRushingPlays")
Base.propertynames(::Type{ AdvancedGameStatOffense }) = collect(keys(_property_map_AdvancedGameStatOffense))
Swagger.property_type(::Type{ AdvancedGameStatOffense }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdvancedGameStatOffense[name]))}
Swagger.field_name(::Type{ AdvancedGameStatOffense }, property_name::Symbol) =  _property_map_AdvancedGameStatOffense[property_name]

function check_required(o::AdvancedGameStatOffense)
    true
end

function validate_property(::Type{ AdvancedGameStatOffense }, name::Symbol, val)
end
