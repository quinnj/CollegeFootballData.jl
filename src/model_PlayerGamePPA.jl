# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PlayerGamePPA <: SwaggerModel
    season::Any # spec type: Union{ Nothing, Int32 } # spec name: season
    week::Any # spec type: Union{ Nothing, Int32 } # spec name: week
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    position::Any # spec type: Union{ Nothing, String } # spec name: position
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    opponent::Any # spec type: Union{ Nothing, String } # spec name: opponent
    averagePPA::Any # spec type: Union{ Nothing, PlayerGamePPAAveragePPA } # spec name: averagePPA

    function PlayerGamePPA(;season=nothing, week=nothing, name=nothing, position=nothing, team=nothing, opponent=nothing, averagePPA=nothing)
        o = new()
        validate_property(PlayerGamePPA, Symbol("season"), season)
        setfield!(o, Symbol("season"), season)
        validate_property(PlayerGamePPA, Symbol("week"), week)
        setfield!(o, Symbol("week"), week)
        validate_property(PlayerGamePPA, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(PlayerGamePPA, Symbol("position"), position)
        setfield!(o, Symbol("position"), position)
        validate_property(PlayerGamePPA, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(PlayerGamePPA, Symbol("opponent"), opponent)
        setfield!(o, Symbol("opponent"), opponent)
        validate_property(PlayerGamePPA, Symbol("averagePPA"), averagePPA)
        setfield!(o, Symbol("averagePPA"), averagePPA)
        o
    end
end # type PlayerGamePPA

const _property_map_PlayerGamePPA = Dict{Symbol,Symbol}(Symbol("season")=>Symbol("season"), Symbol("week")=>Symbol("week"), Symbol("name")=>Symbol("name"), Symbol("position")=>Symbol("position"), Symbol("team")=>Symbol("team"), Symbol("opponent")=>Symbol("opponent"), Symbol("averagePPA")=>Symbol("averagePPA"))
const _property_types_PlayerGamePPA = Dict{Symbol,String}(Symbol("season")=>"Int32", Symbol("week")=>"Int32", Symbol("name")=>"String", Symbol("position")=>"String", Symbol("team")=>"String", Symbol("opponent")=>"String", Symbol("averagePPA")=>"PlayerGamePPAAveragePPA")
Base.propertynames(::Type{ PlayerGamePPA }) = collect(keys(_property_map_PlayerGamePPA))
Swagger.property_type(::Type{ PlayerGamePPA }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PlayerGamePPA[name]))}
Swagger.field_name(::Type{ PlayerGamePPA }, property_name::Symbol) =  _property_map_PlayerGamePPA[property_name]

function check_required(o::PlayerGamePPA)
    true
end

function validate_property(::Type{ PlayerGamePPA }, name::Symbol, val)
end
