# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamPPAOffense <: SwaggerModel
    overall::Any # spec type: Union{ Nothing, Float32 } # spec name: overall
    passing::Any # spec type: Union{ Nothing, Float32 } # spec name: passing
    rushing::Any # spec type: Union{ Nothing, Float32 } # spec name: rushing
    firstDown::Any # spec type: Union{ Nothing, Float32 } # spec name: firstDown
    secondDown::Any # spec type: Union{ Nothing, Float32 } # spec name: secondDown
    thirdDown::Any # spec type: Union{ Nothing, Float32 } # spec name: thirdDown
    cumulative::Any # spec type: Union{ Nothing, TeamPPAOffenseCumulative } # spec name: cumulative

    function TeamPPAOffense(;overall=nothing, passing=nothing, rushing=nothing, firstDown=nothing, secondDown=nothing, thirdDown=nothing, cumulative=nothing)
        o = new()
        validate_property(TeamPPAOffense, Symbol("overall"), overall)
        setfield!(o, Symbol("overall"), overall)
        validate_property(TeamPPAOffense, Symbol("passing"), passing)
        setfield!(o, Symbol("passing"), passing)
        validate_property(TeamPPAOffense, Symbol("rushing"), rushing)
        setfield!(o, Symbol("rushing"), rushing)
        validate_property(TeamPPAOffense, Symbol("firstDown"), firstDown)
        setfield!(o, Symbol("firstDown"), firstDown)
        validate_property(TeamPPAOffense, Symbol("secondDown"), secondDown)
        setfield!(o, Symbol("secondDown"), secondDown)
        validate_property(TeamPPAOffense, Symbol("thirdDown"), thirdDown)
        setfield!(o, Symbol("thirdDown"), thirdDown)
        validate_property(TeamPPAOffense, Symbol("cumulative"), cumulative)
        setfield!(o, Symbol("cumulative"), cumulative)
        o
    end
end # type TeamPPAOffense

const _property_map_TeamPPAOffense = Dict{Symbol,Symbol}(Symbol("overall")=>Symbol("overall"), Symbol("passing")=>Symbol("passing"), Symbol("rushing")=>Symbol("rushing"), Symbol("firstDown")=>Symbol("firstDown"), Symbol("secondDown")=>Symbol("secondDown"), Symbol("thirdDown")=>Symbol("thirdDown"), Symbol("cumulative")=>Symbol("cumulative"))
const _property_types_TeamPPAOffense = Dict{Symbol,String}(Symbol("overall")=>"Float32", Symbol("passing")=>"Float32", Symbol("rushing")=>"Float32", Symbol("firstDown")=>"Float32", Symbol("secondDown")=>"Float32", Symbol("thirdDown")=>"Float32", Symbol("cumulative")=>"TeamPPAOffenseCumulative")
Base.propertynames(::Type{ TeamPPAOffense }) = collect(keys(_property_map_TeamPPAOffense))
Swagger.property_type(::Type{ TeamPPAOffense }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamPPAOffense[name]))}
Swagger.field_name(::Type{ TeamPPAOffense }, property_name::Symbol) =  _property_map_TeamPPAOffense[property_name]

function check_required(o::TeamPPAOffense)
    true
end

function validate_property(::Type{ TeamPPAOffense }, name::Symbol, val)
end
