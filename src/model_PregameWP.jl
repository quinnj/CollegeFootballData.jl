# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PregameWP <: SwaggerModel
    season::Any # spec type: Union{ Nothing, Int32 } # spec name: season
    seasonType::Any # spec type: Union{ Nothing, String } # spec name: seasonType
    week::Any # spec type: Union{ Nothing, Int32 } # spec name: week
    gameId::Any # spec type: Union{ Nothing, Int32 } # spec name: gameId
    homeTeam::Any # spec type: Union{ Nothing, String } # spec name: homeTeam
    awayTeam::Any # spec type: Union{ Nothing, String } # spec name: awayTeam
    spread::Any # spec type: Union{ Nothing, Float32 } # spec name: spread
    homeWinProb::Any # spec type: Union{ Nothing, Float32 } # spec name: homeWinProb

    function PregameWP(;season=nothing, seasonType=nothing, week=nothing, gameId=nothing, homeTeam=nothing, awayTeam=nothing, spread=nothing, homeWinProb=nothing)
        o = new()
        validate_property(PregameWP, Symbol("season"), season)
        setfield!(o, Symbol("season"), season)
        validate_property(PregameWP, Symbol("seasonType"), seasonType)
        setfield!(o, Symbol("seasonType"), seasonType)
        validate_property(PregameWP, Symbol("week"), week)
        setfield!(o, Symbol("week"), week)
        validate_property(PregameWP, Symbol("gameId"), gameId)
        setfield!(o, Symbol("gameId"), gameId)
        validate_property(PregameWP, Symbol("homeTeam"), homeTeam)
        setfield!(o, Symbol("homeTeam"), homeTeam)
        validate_property(PregameWP, Symbol("awayTeam"), awayTeam)
        setfield!(o, Symbol("awayTeam"), awayTeam)
        validate_property(PregameWP, Symbol("spread"), spread)
        setfield!(o, Symbol("spread"), spread)
        validate_property(PregameWP, Symbol("homeWinProb"), homeWinProb)
        setfield!(o, Symbol("homeWinProb"), homeWinProb)
        o
    end
end # type PregameWP

const _property_map_PregameWP = Dict{Symbol,Symbol}(Symbol("season")=>Symbol("season"), Symbol("seasonType")=>Symbol("seasonType"), Symbol("week")=>Symbol("week"), Symbol("gameId")=>Symbol("gameId"), Symbol("homeTeam")=>Symbol("homeTeam"), Symbol("awayTeam")=>Symbol("awayTeam"), Symbol("spread")=>Symbol("spread"), Symbol("homeWinProb")=>Symbol("homeWinProb"))
const _property_types_PregameWP = Dict{Symbol,String}(Symbol("season")=>"Int32", Symbol("seasonType")=>"String", Symbol("week")=>"Int32", Symbol("gameId")=>"Int32", Symbol("homeTeam")=>"String", Symbol("awayTeam")=>"String", Symbol("spread")=>"Float32", Symbol("homeWinProb")=>"Float32")
Base.propertynames(::Type{ PregameWP }) = collect(keys(_property_map_PregameWP))
Swagger.property_type(::Type{ PregameWP }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PregameWP[name]))}
Swagger.field_name(::Type{ PregameWP }, property_name::Symbol) =  _property_map_PregameWP[property_name]

function check_required(o::PregameWP)
    true
end

function validate_property(::Type{ PregameWP }, name::Symbol, val)
end
