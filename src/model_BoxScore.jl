# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct BoxScore <: SwaggerModel
    teams::Any # spec type: Union{ Nothing, BoxScoreTeams } # spec name: teams
    players::Any # spec type: Union{ Nothing, BoxScorePlayers } # spec name: players

    function BoxScore(;teams=nothing, players=nothing)
        o = new()
        validate_property(BoxScore, Symbol("teams"), teams)
        setfield!(o, Symbol("teams"), teams)
        validate_property(BoxScore, Symbol("players"), players)
        setfield!(o, Symbol("players"), players)
        o
    end
end # type BoxScore

const _property_map_BoxScore = Dict{Symbol,Symbol}(Symbol("teams")=>Symbol("teams"), Symbol("players")=>Symbol("players"))
const _property_types_BoxScore = Dict{Symbol,String}(Symbol("teams")=>"BoxScoreTeams", Symbol("players")=>"BoxScorePlayers")
Base.propertynames(::Type{ BoxScore }) = collect(keys(_property_map_BoxScore))
Swagger.property_type(::Type{ BoxScore }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BoxScore[name]))}
Swagger.field_name(::Type{ BoxScore }, property_name::Symbol) =  _property_map_BoxScore[property_name]

function check_required(o::BoxScore)
    true
end

function validate_property(::Type{ BoxScore }, name::Symbol, val)
end
