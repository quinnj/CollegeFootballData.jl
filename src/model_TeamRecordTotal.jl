# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamRecordTotal <: SwaggerModel
    games::Any # spec type: Union{ Nothing, Int32 } # spec name: games
    wins::Any # spec type: Union{ Nothing, Int32 } # spec name: wins
    losses::Any # spec type: Union{ Nothing, Int32 } # spec name: losses
    ties::Any # spec type: Union{ Nothing, Int32 } # spec name: ties

    function TeamRecordTotal(;games=nothing, wins=nothing, losses=nothing, ties=nothing)
        o = new()
        validate_property(TeamRecordTotal, Symbol("games"), games)
        setfield!(o, Symbol("games"), games)
        validate_property(TeamRecordTotal, Symbol("wins"), wins)
        setfield!(o, Symbol("wins"), wins)
        validate_property(TeamRecordTotal, Symbol("losses"), losses)
        setfield!(o, Symbol("losses"), losses)
        validate_property(TeamRecordTotal, Symbol("ties"), ties)
        setfield!(o, Symbol("ties"), ties)
        o
    end
end # type TeamRecordTotal

const _property_map_TeamRecordTotal = Dict{Symbol,Symbol}(Symbol("games")=>Symbol("games"), Symbol("wins")=>Symbol("wins"), Symbol("losses")=>Symbol("losses"), Symbol("ties")=>Symbol("ties"))
const _property_types_TeamRecordTotal = Dict{Symbol,String}(Symbol("games")=>"Int32", Symbol("wins")=>"Int32", Symbol("losses")=>"Int32", Symbol("ties")=>"Int32")
Base.propertynames(::Type{ TeamRecordTotal }) = collect(keys(_property_map_TeamRecordTotal))
Swagger.property_type(::Type{ TeamRecordTotal }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamRecordTotal[name]))}
Swagger.field_name(::Type{ TeamRecordTotal }, property_name::Symbol) =  _property_map_TeamRecordTotal[property_name]

function check_required(o::TeamRecordTotal)
    true
end

function validate_property(::Type{ TeamRecordTotal }, name::Symbol, val)
end
