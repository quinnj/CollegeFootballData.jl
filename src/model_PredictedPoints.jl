# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PredictedPoints <: SwaggerModel
    yardLine::Any # spec type: Union{ Nothing, Int32 } # spec name: yardLine
    predictedPoints::Any # spec type: Union{ Nothing, Float32 } # spec name: predictedPoints

    function PredictedPoints(;yardLine=nothing, predictedPoints=nothing)
        o = new()
        validate_property(PredictedPoints, Symbol("yardLine"), yardLine)
        setfield!(o, Symbol("yardLine"), yardLine)
        validate_property(PredictedPoints, Symbol("predictedPoints"), predictedPoints)
        setfield!(o, Symbol("predictedPoints"), predictedPoints)
        o
    end
end # type PredictedPoints

const _property_map_PredictedPoints = Dict{Symbol,Symbol}(Symbol("yardLine")=>Symbol("yardLine"), Symbol("predictedPoints")=>Symbol("predictedPoints"))
const _property_types_PredictedPoints = Dict{Symbol,String}(Symbol("yardLine")=>"Int32", Symbol("predictedPoints")=>"Float32")
Base.propertynames(::Type{ PredictedPoints }) = collect(keys(_property_map_PredictedPoints))
Swagger.property_type(::Type{ PredictedPoints }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PredictedPoints[name]))}
Swagger.field_name(::Type{ PredictedPoints }, property_name::Symbol) =  _property_map_PredictedPoints[property_name]

function check_required(o::PredictedPoints)
    true
end

function validate_property(::Type{ PredictedPoints }, name::Symbol, val)
end
