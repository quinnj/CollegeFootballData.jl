# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamRecruitingRank <: SwaggerModel
    year::Any # spec type: Union{ Nothing, Int32 } # spec name: year
    rank::Any # spec type: Union{ Nothing, Int32 } # spec name: rank
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    points::Any # spec type: Union{ Nothing, Float32 } # spec name: points

    function TeamRecruitingRank(;year=nothing, rank=nothing, team=nothing, points=nothing)
        o = new()
        validate_property(TeamRecruitingRank, Symbol("year"), year)
        setfield!(o, Symbol("year"), year)
        validate_property(TeamRecruitingRank, Symbol("rank"), rank)
        setfield!(o, Symbol("rank"), rank)
        validate_property(TeamRecruitingRank, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(TeamRecruitingRank, Symbol("points"), points)
        setfield!(o, Symbol("points"), points)
        o
    end
end # type TeamRecruitingRank

const _property_map_TeamRecruitingRank = Dict{Symbol,Symbol}(Symbol("year")=>Symbol("year"), Symbol("rank")=>Symbol("rank"), Symbol("team")=>Symbol("team"), Symbol("points")=>Symbol("points"))
const _property_types_TeamRecruitingRank = Dict{Symbol,String}(Symbol("year")=>"Int32", Symbol("rank")=>"Int32", Symbol("team")=>"String", Symbol("points")=>"Float32")
Base.propertynames(::Type{ TeamRecruitingRank }) = collect(keys(_property_map_TeamRecruitingRank))
Swagger.property_type(::Type{ TeamRecruitingRank }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamRecruitingRank[name]))}
Swagger.field_name(::Type{ TeamRecruitingRank }, property_name::Symbol) =  _property_map_TeamRecruitingRank[property_name]

function check_required(o::TeamRecruitingRank)
    true
end

function validate_property(::Type{ TeamRecruitingRank }, name::Symbol, val)
end
