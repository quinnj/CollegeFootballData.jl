# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamGame <: SwaggerModel
    id::Any # spec type: Union{ Nothing, Int32 } # spec name: id
    teams::Any # spec type: Union{ Nothing, Vector{TeamGameTeams} } # spec name: teams

    function TeamGame(;id=nothing, teams=nothing)
        o = new()
        validate_property(TeamGame, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(TeamGame, Symbol("teams"), teams)
        setfield!(o, Symbol("teams"), teams)
        o
    end
end # type TeamGame

const _property_map_TeamGame = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("teams")=>Symbol("teams"))
const _property_types_TeamGame = Dict{Symbol,String}(Symbol("id")=>"Int32", Symbol("teams")=>"Vector{TeamGameTeams}")
Base.propertynames(::Type{ TeamGame }) = collect(keys(_property_map_TeamGame))
Swagger.property_type(::Type{ TeamGame }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamGame[name]))}
Swagger.field_name(::Type{ TeamGame }, property_name::Symbol) =  _property_map_TeamGame[property_name]

function check_required(o::TeamGame)
    true
end

function validate_property(::Type{ TeamGame }, name::Symbol, val)
end
