# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PositionGroupRecruitingRating <: SwaggerModel
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    conference::Any # spec type: Union{ Nothing, String } # spec name: conference
    positiionGroup::Any # spec type: Union{ Nothing, String } # spec name: positiionGroup
    averageRating::Any # spec type: Union{ Nothing, Float32 } # spec name: averageRating
    totalRating::Any # spec type: Union{ Nothing, Float32 } # spec name: totalRating
    commits::Any # spec type: Union{ Nothing, Float32 } # spec name: commits
    averageStars::Any # spec type: Union{ Nothing, Float32 } # spec name: averageStars

    function PositionGroupRecruitingRating(;team=nothing, conference=nothing, positiionGroup=nothing, averageRating=nothing, totalRating=nothing, commits=nothing, averageStars=nothing)
        o = new()
        validate_property(PositionGroupRecruitingRating, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(PositionGroupRecruitingRating, Symbol("conference"), conference)
        setfield!(o, Symbol("conference"), conference)
        validate_property(PositionGroupRecruitingRating, Symbol("positiionGroup"), positiionGroup)
        setfield!(o, Symbol("positiionGroup"), positiionGroup)
        validate_property(PositionGroupRecruitingRating, Symbol("averageRating"), averageRating)
        setfield!(o, Symbol("averageRating"), averageRating)
        validate_property(PositionGroupRecruitingRating, Symbol("totalRating"), totalRating)
        setfield!(o, Symbol("totalRating"), totalRating)
        validate_property(PositionGroupRecruitingRating, Symbol("commits"), commits)
        setfield!(o, Symbol("commits"), commits)
        validate_property(PositionGroupRecruitingRating, Symbol("averageStars"), averageStars)
        setfield!(o, Symbol("averageStars"), averageStars)
        o
    end
end # type PositionGroupRecruitingRating

const _property_map_PositionGroupRecruitingRating = Dict{Symbol,Symbol}(Symbol("team")=>Symbol("team"), Symbol("conference")=>Symbol("conference"), Symbol("positiionGroup")=>Symbol("positiionGroup"), Symbol("averageRating")=>Symbol("averageRating"), Symbol("totalRating")=>Symbol("totalRating"), Symbol("commits")=>Symbol("commits"), Symbol("averageStars")=>Symbol("averageStars"))
const _property_types_PositionGroupRecruitingRating = Dict{Symbol,String}(Symbol("team")=>"String", Symbol("conference")=>"String", Symbol("positiionGroup")=>"String", Symbol("averageRating")=>"Float32", Symbol("totalRating")=>"Float32", Symbol("commits")=>"Float32", Symbol("averageStars")=>"Float32")
Base.propertynames(::Type{ PositionGroupRecruitingRating }) = collect(keys(_property_map_PositionGroupRecruitingRating))
Swagger.property_type(::Type{ PositionGroupRecruitingRating }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PositionGroupRecruitingRating[name]))}
Swagger.field_name(::Type{ PositionGroupRecruitingRating }, property_name::Symbol) =  _property_map_PositionGroupRecruitingRating[property_name]

function check_required(o::PositionGroupRecruitingRating)
    true
end

function validate_property(::Type{ PositionGroupRecruitingRating }, name::Symbol, val)
end
