# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct BoxScoreTeamsPpa <: SwaggerModel
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    overall::Any # spec type: Union{ Nothing, BoxScoreTeamsOverall } # spec name: overall
    passing::Any # spec type: Union{ Nothing, BoxScoreTeamsOverall } # spec name: passing
    rushing::Any # spec type: Union{ Nothing, BoxScoreTeamsOverall } # spec name: rushing

    function BoxScoreTeamsPpa(;team=nothing, overall=nothing, passing=nothing, rushing=nothing)
        o = new()
        validate_property(BoxScoreTeamsPpa, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(BoxScoreTeamsPpa, Symbol("overall"), overall)
        setfield!(o, Symbol("overall"), overall)
        validate_property(BoxScoreTeamsPpa, Symbol("passing"), passing)
        setfield!(o, Symbol("passing"), passing)
        validate_property(BoxScoreTeamsPpa, Symbol("rushing"), rushing)
        setfield!(o, Symbol("rushing"), rushing)
        o
    end
end # type BoxScoreTeamsPpa

const _property_map_BoxScoreTeamsPpa = Dict{Symbol,Symbol}(Symbol("team")=>Symbol("team"), Symbol("overall")=>Symbol("overall"), Symbol("passing")=>Symbol("passing"), Symbol("rushing")=>Symbol("rushing"))
const _property_types_BoxScoreTeamsPpa = Dict{Symbol,String}(Symbol("team")=>"String", Symbol("overall")=>"BoxScoreTeamsOverall", Symbol("passing")=>"BoxScoreTeamsOverall", Symbol("rushing")=>"BoxScoreTeamsOverall")
Base.propertynames(::Type{ BoxScoreTeamsPpa }) = collect(keys(_property_map_BoxScoreTeamsPpa))
Swagger.property_type(::Type{ BoxScoreTeamsPpa }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BoxScoreTeamsPpa[name]))}
Swagger.field_name(::Type{ BoxScoreTeamsPpa }, property_name::Symbol) =  _property_map_BoxScoreTeamsPpa[property_name]

function check_required(o::BoxScoreTeamsPpa)
    true
end

function validate_property(::Type{ BoxScoreTeamsPpa }, name::Symbol, val)
end
