# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamPPAOffenseCumulative <: SwaggerModel
    total::Any # spec type: Union{ Nothing, Float32 } # spec name: total
    passing::Any # spec type: Union{ Nothing, Float32 } # spec name: passing
    rushing::Any # spec type: Union{ Nothing, Float32 } # spec name: rushing

    function TeamPPAOffenseCumulative(;total=nothing, passing=nothing, rushing=nothing)
        o = new()
        validate_property(TeamPPAOffenseCumulative, Symbol("total"), total)
        setfield!(o, Symbol("total"), total)
        validate_property(TeamPPAOffenseCumulative, Symbol("passing"), passing)
        setfield!(o, Symbol("passing"), passing)
        validate_property(TeamPPAOffenseCumulative, Symbol("rushing"), rushing)
        setfield!(o, Symbol("rushing"), rushing)
        o
    end
end # type TeamPPAOffenseCumulative

const _property_map_TeamPPAOffenseCumulative = Dict{Symbol,Symbol}(Symbol("total")=>Symbol("total"), Symbol("passing")=>Symbol("passing"), Symbol("rushing")=>Symbol("rushing"))
const _property_types_TeamPPAOffenseCumulative = Dict{Symbol,String}(Symbol("total")=>"Float32", Symbol("passing")=>"Float32", Symbol("rushing")=>"Float32")
Base.propertynames(::Type{ TeamPPAOffenseCumulative }) = collect(keys(_property_map_TeamPPAOffenseCumulative))
Swagger.property_type(::Type{ TeamPPAOffenseCumulative }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamPPAOffenseCumulative[name]))}
Swagger.field_name(::Type{ TeamPPAOffenseCumulative }, property_name::Symbol) =  _property_map_TeamPPAOffenseCumulative[property_name]

function check_required(o::TeamPPAOffenseCumulative)
    true
end

function validate_property(::Type{ TeamPPAOffenseCumulative }, name::Symbol, val)
end
