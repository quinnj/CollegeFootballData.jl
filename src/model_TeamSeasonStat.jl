# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamSeasonStat <: SwaggerModel
    season::Any # spec type: Union{ Nothing, Int32 } # spec name: season
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    conference::Any # spec type: Union{ Nothing, String } # spec name: conference
    statName::Any # spec type: Union{ Nothing, String } # spec name: statName
    statValue::Any # spec type: Union{ Nothing, Int32 } # spec name: statValue

    function TeamSeasonStat(;season=nothing, team=nothing, conference=nothing, statName=nothing, statValue=nothing)
        o = new()
        validate_property(TeamSeasonStat, Symbol("season"), season)
        setfield!(o, Symbol("season"), season)
        validate_property(TeamSeasonStat, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(TeamSeasonStat, Symbol("conference"), conference)
        setfield!(o, Symbol("conference"), conference)
        validate_property(TeamSeasonStat, Symbol("statName"), statName)
        setfield!(o, Symbol("statName"), statName)
        validate_property(TeamSeasonStat, Symbol("statValue"), statValue)
        setfield!(o, Symbol("statValue"), statValue)
        o
    end
end # type TeamSeasonStat

const _property_map_TeamSeasonStat = Dict{Symbol,Symbol}(Symbol("season")=>Symbol("season"), Symbol("team")=>Symbol("team"), Symbol("conference")=>Symbol("conference"), Symbol("statName")=>Symbol("statName"), Symbol("statValue")=>Symbol("statValue"))
const _property_types_TeamSeasonStat = Dict{Symbol,String}(Symbol("season")=>"Int32", Symbol("team")=>"String", Symbol("conference")=>"String", Symbol("statName")=>"String", Symbol("statValue")=>"Int32")
Base.propertynames(::Type{ TeamSeasonStat }) = collect(keys(_property_map_TeamSeasonStat))
Swagger.property_type(::Type{ TeamSeasonStat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamSeasonStat[name]))}
Swagger.field_name(::Type{ TeamSeasonStat }, property_name::Symbol) =  _property_map_TeamSeasonStat[property_name]

function check_required(o::TeamSeasonStat)
    true
end

function validate_property(::Type{ TeamSeasonStat }, name::Symbol, val)
end
