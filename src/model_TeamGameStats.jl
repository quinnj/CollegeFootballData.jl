# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamGameStats <: SwaggerModel
    category::Any # spec type: Union{ Nothing, String } # spec name: category
    stat::Any # spec type: Union{ Nothing, String } # spec name: stat

    function TeamGameStats(;category=nothing, stat=nothing)
        o = new()
        validate_property(TeamGameStats, Symbol("category"), category)
        setfield!(o, Symbol("category"), category)
        validate_property(TeamGameStats, Symbol("stat"), stat)
        setfield!(o, Symbol("stat"), stat)
        o
    end
end # type TeamGameStats

const _property_map_TeamGameStats = Dict{Symbol,Symbol}(Symbol("category")=>Symbol("category"), Symbol("stat")=>Symbol("stat"))
const _property_types_TeamGameStats = Dict{Symbol,String}(Symbol("category")=>"String", Symbol("stat")=>"String")
Base.propertynames(::Type{ TeamGameStats }) = collect(keys(_property_map_TeamGameStats))
Swagger.property_type(::Type{ TeamGameStats }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamGameStats[name]))}
Swagger.field_name(::Type{ TeamGameStats }, property_name::Symbol) =  _property_map_TeamGameStats[property_name]

function check_required(o::TeamGameStats)
    true
end

function validate_property(::Type{ TeamGameStats }, name::Symbol, val)
end
