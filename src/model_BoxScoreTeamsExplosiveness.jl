# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct BoxScoreTeamsExplosiveness <: SwaggerModel
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    overall::Any # spec type: Union{ Nothing, BoxScoreTeamsOverall } # spec name: overall

    function BoxScoreTeamsExplosiveness(;team=nothing, overall=nothing)
        o = new()
        validate_property(BoxScoreTeamsExplosiveness, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(BoxScoreTeamsExplosiveness, Symbol("overall"), overall)
        setfield!(o, Symbol("overall"), overall)
        o
    end
end # type BoxScoreTeamsExplosiveness

const _property_map_BoxScoreTeamsExplosiveness = Dict{Symbol,Symbol}(Symbol("team")=>Symbol("team"), Symbol("overall")=>Symbol("overall"))
const _property_types_BoxScoreTeamsExplosiveness = Dict{Symbol,String}(Symbol("team")=>"String", Symbol("overall")=>"BoxScoreTeamsOverall")
Base.propertynames(::Type{ BoxScoreTeamsExplosiveness }) = collect(keys(_property_map_BoxScoreTeamsExplosiveness))
Swagger.property_type(::Type{ BoxScoreTeamsExplosiveness }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BoxScoreTeamsExplosiveness[name]))}
Swagger.field_name(::Type{ BoxScoreTeamsExplosiveness }, property_name::Symbol) =  _property_map_BoxScoreTeamsExplosiveness[property_name]

function check_required(o::BoxScoreTeamsExplosiveness)
    true
end

function validate_property(::Type{ BoxScoreTeamsExplosiveness }, name::Symbol, val)
end
