# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct BoxScorePlayers <: SwaggerModel
    usage::Any # spec type: Union{ Nothing, Vector{BoxScorePlayersUsage} } # spec name: usage
    ppa::Any # spec type: Union{ Nothing, Vector{BoxScorePlayersPpa} } # spec name: ppa

    function BoxScorePlayers(;usage=nothing, ppa=nothing)
        o = new()
        validate_property(BoxScorePlayers, Symbol("usage"), usage)
        setfield!(o, Symbol("usage"), usage)
        validate_property(BoxScorePlayers, Symbol("ppa"), ppa)
        setfield!(o, Symbol("ppa"), ppa)
        o
    end
end # type BoxScorePlayers

const _property_map_BoxScorePlayers = Dict{Symbol,Symbol}(Symbol("usage")=>Symbol("usage"), Symbol("ppa")=>Symbol("ppa"))
const _property_types_BoxScorePlayers = Dict{Symbol,String}(Symbol("usage")=>"Vector{BoxScorePlayersUsage}", Symbol("ppa")=>"Vector{BoxScorePlayersPpa}")
Base.propertynames(::Type{ BoxScorePlayers }) = collect(keys(_property_map_BoxScorePlayers))
Swagger.property_type(::Type{ BoxScorePlayers }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BoxScorePlayers[name]))}
Swagger.field_name(::Type{ BoxScorePlayers }, property_name::Symbol) =  _property_map_BoxScorePlayers[property_name]

function check_required(o::BoxScorePlayers)
    true
end

function validate_property(::Type{ BoxScorePlayers }, name::Symbol, val)
end
