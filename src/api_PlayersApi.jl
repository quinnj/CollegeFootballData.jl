# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct PlayersApi <: SwaggerApi
    client::Swagger.Client
end

"""
Player stats by season
Season player stats
Param: year::Int32 (required)
Param: team::String
Param: conference::String
Param: startWeek::Int32
Param: endWeek::Int32
Param: seasonType::String
Param: category::String
Return: Vector{PlayerSeasonStat}
"""
function getPlayerSeasonStats(_api::PlayersApi, year::Int32; team=nothing, conference=nothing, startWeek=nothing, endWeek=nothing, seasonType=nothing, category=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Vector{PlayerSeasonStat}, "/stats/player/season", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_param(_ctx.query, "startWeek", startWeek)  # type Int32
    Swagger.set_param(_ctx.query, "endWeek", endWeek)  # type Int32
    Swagger.set_param(_ctx.query, "seasonType", seasonType)  # type String
    Swagger.set_param(_ctx.query, "category", category)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Player usage metrics broken down by season
Player usage metrics by season
Param: year::Int32 (required)
Param: team::String
Param: conference::String
Param: position::String
Param: playerId::Int32
Param: excludeGarbageTime::Bool
Return: Vector{PlayerUsage}
"""
function getPlayerUsage(_api::PlayersApi, year::Int32; team=nothing, conference=nothing, position=nothing, playerId=nothing, excludeGarbageTime=nothing, _mediaType=nothing)
    Swagger.validate_param("year", "getPlayerUsage", :minimum, year, 2013, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{PlayerUsage}, "/player/usage", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_param(_ctx.query, "position", position)  # type String
    Swagger.set_param(_ctx.query, "playerId", playerId)  # type Int32
    Swagger.set_param(_ctx.query, "excludeGarbageTime", excludeGarbageTime)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Team returning production metrics
Returning production metrics
Param: year::Int32
Param: team::String
Param: conference::String
Return: Vector{ReturningProduction}
"""
function getReturningProduction(_api::PlayersApi; year=nothing, team=nothing, conference=nothing, _mediaType=nothing)
    Swagger.validate_param("year", "getReturningProduction", :minimum, year, 2014, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{ReturningProduction}, "/player/returning", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Search for player information
Search for players
Param: searchTerm::String (required)
Param: position::String
Param: team::String
Param: year::Int32
Return: Vector{PlayerSearchResult}
"""
function playerSearch(_api::PlayersApi, searchTerm::String; position=nothing, team=nothing, year=nothing, _mediaType=nothing)
    Swagger.validate_param("year", "playerSearch", :minimum, year, 2001, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{PlayerSearchResult}, "/player/search", [])
    Swagger.set_param(_ctx.query, "searchTerm", searchTerm)  # type String
    Swagger.set_param(_ctx.query, "position", position)  # type String
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

export getPlayerSeasonStats, getPlayerUsage, getReturningProduction, playerSearch
