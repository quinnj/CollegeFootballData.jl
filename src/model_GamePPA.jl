# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct GamePPA <: SwaggerModel
    id::Any # spec type: Union{ Nothing, Int32 } # spec name: id
    season::Any # spec type: Union{ Nothing, Int32 } # spec name: season
    week::Any # spec type: Union{ Nothing, Int32 } # spec name: week
    team::Any # spec type: Union{ Nothing, String } # spec name: team
    conference::Any # spec type: Union{ Nothing, String } # spec name: conference
    opponnent::Any # spec type: Union{ Nothing, String } # spec name: opponnent
    offense::Any # spec type: Union{ Nothing, GamePPAOffense } # spec name: offense
    defense::Any # spec type: Union{ Nothing, GamePPAOffense } # spec name: defense

    function GamePPA(;id=nothing, season=nothing, week=nothing, team=nothing, conference=nothing, opponnent=nothing, offense=nothing, defense=nothing)
        o = new()
        validate_property(GamePPA, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(GamePPA, Symbol("season"), season)
        setfield!(o, Symbol("season"), season)
        validate_property(GamePPA, Symbol("week"), week)
        setfield!(o, Symbol("week"), week)
        validate_property(GamePPA, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(GamePPA, Symbol("conference"), conference)
        setfield!(o, Symbol("conference"), conference)
        validate_property(GamePPA, Symbol("opponnent"), opponnent)
        setfield!(o, Symbol("opponnent"), opponnent)
        validate_property(GamePPA, Symbol("offense"), offense)
        setfield!(o, Symbol("offense"), offense)
        validate_property(GamePPA, Symbol("defense"), defense)
        setfield!(o, Symbol("defense"), defense)
        o
    end
end # type GamePPA

const _property_map_GamePPA = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("season")=>Symbol("season"), Symbol("week")=>Symbol("week"), Symbol("team")=>Symbol("team"), Symbol("conference")=>Symbol("conference"), Symbol("opponnent")=>Symbol("opponnent"), Symbol("offense")=>Symbol("offense"), Symbol("defense")=>Symbol("defense"))
const _property_types_GamePPA = Dict{Symbol,String}(Symbol("id")=>"Int32", Symbol("season")=>"Int32", Symbol("week")=>"Int32", Symbol("team")=>"String", Symbol("conference")=>"String", Symbol("opponnent")=>"String", Symbol("offense")=>"GamePPAOffense", Symbol("defense")=>"GamePPAOffense")
Base.propertynames(::Type{ GamePPA }) = collect(keys(_property_map_GamePPA))
Swagger.property_type(::Type{ GamePPA }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GamePPA[name]))}
Swagger.field_name(::Type{ GamePPA }, property_name::Symbol) =  _property_map_GamePPA[property_name]

function check_required(o::GamePPA)
    true
end

function validate_property(::Type{ GamePPA }, name::Symbol, val)
end
