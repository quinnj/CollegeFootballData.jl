# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct DriveStartTime <: SwaggerModel
    minutes::Any # spec type: Union{ Nothing, Int32 } # spec name: minutes
    seconds::Any # spec type: Union{ Nothing, Int32 } # spec name: seconds

    function DriveStartTime(;minutes=nothing, seconds=nothing)
        o = new()
        validate_property(DriveStartTime, Symbol("minutes"), minutes)
        setfield!(o, Symbol("minutes"), minutes)
        validate_property(DriveStartTime, Symbol("seconds"), seconds)
        setfield!(o, Symbol("seconds"), seconds)
        o
    end
end # type DriveStartTime

const _property_map_DriveStartTime = Dict{Symbol,Symbol}(Symbol("minutes")=>Symbol("minutes"), Symbol("seconds")=>Symbol("seconds"))
const _property_types_DriveStartTime = Dict{Symbol,String}(Symbol("minutes")=>"Int32", Symbol("seconds")=>"Int32")
Base.propertynames(::Type{ DriveStartTime }) = collect(keys(_property_map_DriveStartTime))
Swagger.property_type(::Type{ DriveStartTime }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DriveStartTime[name]))}
Swagger.field_name(::Type{ DriveStartTime }, property_name::Symbol) =  _property_map_DriveStartTime[property_name]

function check_required(o::DriveStartTime)
    true
end

function validate_property(::Type{ DriveStartTime }, name::Symbol, val)
end
