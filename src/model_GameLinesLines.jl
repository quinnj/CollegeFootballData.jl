# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct GameLinesLines <: SwaggerModel
    provider::Any # spec type: Union{ Nothing, String } # spec name: provider
    spread::Any # spec type: Union{ Nothing, Float32 } # spec name: spread
    formattedSpread::Any # spec type: Union{ Nothing, String } # spec name: formattedSpread
    overUnder::Any # spec type: Union{ Nothing, Float32 } # spec name: overUnder

    function GameLinesLines(;provider=nothing, spread=nothing, formattedSpread=nothing, overUnder=nothing)
        o = new()
        validate_property(GameLinesLines, Symbol("provider"), provider)
        setfield!(o, Symbol("provider"), provider)
        validate_property(GameLinesLines, Symbol("spread"), spread)
        setfield!(o, Symbol("spread"), spread)
        validate_property(GameLinesLines, Symbol("formattedSpread"), formattedSpread)
        setfield!(o, Symbol("formattedSpread"), formattedSpread)
        validate_property(GameLinesLines, Symbol("overUnder"), overUnder)
        setfield!(o, Symbol("overUnder"), overUnder)
        o
    end
end # type GameLinesLines

const _property_map_GameLinesLines = Dict{Symbol,Symbol}(Symbol("provider")=>Symbol("provider"), Symbol("spread")=>Symbol("spread"), Symbol("formattedSpread")=>Symbol("formattedSpread"), Symbol("overUnder")=>Symbol("overUnder"))
const _property_types_GameLinesLines = Dict{Symbol,String}(Symbol("provider")=>"String", Symbol("spread")=>"Float32", Symbol("formattedSpread")=>"String", Symbol("overUnder")=>"Float32")
Base.propertynames(::Type{ GameLinesLines }) = collect(keys(_property_map_GameLinesLines))
Swagger.property_type(::Type{ GameLinesLines }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GameLinesLines[name]))}
Swagger.field_name(::Type{ GameLinesLines }, property_name::Symbol) =  _property_map_GameLinesLines[property_name]

function check_required(o::GameLinesLines)
    true
end

function validate_property(::Type{ GameLinesLines }, name::Symbol, val)
end
