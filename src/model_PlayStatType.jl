# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PlayStatType <: SwaggerModel
    id::Any # spec type: Union{ Nothing, Int32 } # spec name: id
    name::Any # spec type: Union{ Nothing, String } # spec name: name

    function PlayStatType(;id=nothing, name=nothing)
        o = new()
        validate_property(PlayStatType, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(PlayStatType, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        o
    end
end # type PlayStatType

const _property_map_PlayStatType = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("name")=>Symbol("name"))
const _property_types_PlayStatType = Dict{Symbol,String}(Symbol("id")=>"Int32", Symbol("name")=>"String")
Base.propertynames(::Type{ PlayStatType }) = collect(keys(_property_map_PlayStatType))
Swagger.property_type(::Type{ PlayStatType }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PlayStatType[name]))}
Swagger.field_name(::Type{ PlayStatType }, property_name::Symbol) =  _property_map_PlayStatType[property_name]

function check_required(o::PlayStatType)
    true
end

function validate_property(::Type{ PlayStatType }, name::Symbol, val)
end
