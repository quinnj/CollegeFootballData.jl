# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct GamesApi <: SwaggerApi
    client::Swagger.Client
end

"""
Advanced box scores
Get advanced box score data
Param: gameId::Int32 (required)
Return: Vector{BoxScore}
"""
function getAdvancedBoxScore(_api::GamesApi, gameId::Int32; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Vector{BoxScore}, "/game/box/advanced", [])
    Swagger.set_param(_ctx.query, "gameId", gameId)  # type Int32
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Game media information and schedules
Game media information (TV, radio, etc)
Param: year::Int32 (required)
Param: week::Int32
Param: seasonType::String
Param: team::String
Param: conference::String
Param: mediaType::String
Return: Vector{GameMedia}
"""
function getGameMedia(_api::GamesApi, year::Int32; week=nothing, seasonType=nothing, team=nothing, conference=nothing, mediaType=nothing, _mediaType=nothing)
    Swagger.validate_param("year", "getGameMedia", :minimum, year, 2001, false)

    Swagger.validate_param("week", "getGameMedia", :maximum, week, 16, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{GameMedia}, "/games/media", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "week", week)  # type Int32
    Swagger.set_param(_ctx.query, "seasonType", seasonType)  # type String
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_param(_ctx.query, "mediaType", mediaType)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Games and results
Get game results
Param: year::Int32 (required)
Param: week::Int32
Param: seasonType::String
Param: team::String
Param: home::String
Param: away::String
Param: conference::String
Param: id::Int32
Return: Vector{Game}
"""
function getGames(_api::GamesApi, year::Int32; week=nothing, seasonType=nothing, team=nothing, home=nothing, away=nothing, conference=nothing, id=nothing, _mediaType=nothing)
    Swagger.validate_param("year", "getGames", :minimum, year, 1869, false)

    Swagger.validate_param("week", "getGames", :maximum, week, 16, false)
    Swagger.validate_param("week", "getGames", :minimum, week, 1, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{Game}, "/games", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "week", week)  # type Int32
    Swagger.set_param(_ctx.query, "seasonType", seasonType)  # type String
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "home", home)  # type String
    Swagger.set_param(_ctx.query, "away", away)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_param(_ctx.query, "id", id)  # type Int32
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Player game stats
Player stats broken down by game
Param: year::Int32 (required)
Param: week::Int32
Param: seasonType::String
Param: team::String
Param: conference::String
Param: category::String
Param: gameId::Int32
Return: Vector{PlayerGame}
"""
function getPlayerGameStats(_api::GamesApi, year::Int32; week=nothing, seasonType=nothing, team=nothing, conference=nothing, category=nothing, gameId=nothing, _mediaType=nothing)
    Swagger.validate_param("week", "getPlayerGameStats", :maximum, week, 16, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{PlayerGame}, "/games/players", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "week", week)  # type Int32
    Swagger.set_param(_ctx.query, "seasonType", seasonType)  # type String
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_param(_ctx.query, "category", category)  # type String
    Swagger.set_param(_ctx.query, "gameId", gameId)  # type Int32
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Team game stats
Team stats broken down by game
Param: year::Int32 (required)
Param: week::Int32
Param: seasonType::String
Param: team::String
Param: conference::String
Param: gameId::Int32
Return: Vector{TeamGame}
"""
function getTeamGameStats(_api::GamesApi, year::Int32; week=nothing, seasonType=nothing, team=nothing, conference=nothing, gameId=nothing, _mediaType=nothing)
    Swagger.validate_param("year", "getTeamGameStats", :minimum, year, 2001, false)

    Swagger.validate_param("week", "getTeamGameStats", :maximum, week, 16, false)
    Swagger.validate_param("week", "getTeamGameStats", :minimum, week, 1, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{TeamGame}, "/games/teams", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "week", week)  # type Int32
    Swagger.set_param(_ctx.query, "seasonType", seasonType)  # type String
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_param(_ctx.query, "gameId", gameId)  # type Int32
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Team records
Get team records by year
Param: year::Int32
Param: team::String
Param: conference::String
Return: Vector{TeamRecord}
"""
function getTeamRecords(_api::GamesApi; year=nothing, team=nothing, conference=nothing, _mediaType=nothing)
    Swagger.validate_param("year", "getTeamRecords", :minimum, year, 1869, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Vector{TeamRecord}, "/records", [])
    Swagger.set_param(_ctx.query, "year", year)  # type Int32
    Swagger.set_param(_ctx.query, "team", team)  # type String
    Swagger.set_param(_ctx.query, "conference", conference)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

export getAdvancedBoxScore, getGameMedia, getGames, getPlayerGameStats, getTeamGameStats, getTeamRecords
