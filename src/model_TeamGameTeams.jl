# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TeamGameTeams <: SwaggerModel
    school::Any # spec type: Union{ Nothing, String } # spec name: school
    conference::Any # spec type: Union{ Nothing, String } # spec name: conference
    homeAway::Any # spec type: Union{ Nothing, Bool } # spec name: homeAway
    points::Any # spec type: Union{ Nothing, Int32 } # spec name: points
    stats::Any # spec type: Union{ Nothing, Vector{TeamGameStats} } # spec name: stats

    function TeamGameTeams(;school=nothing, conference=nothing, homeAway=nothing, points=nothing, stats=nothing)
        o = new()
        validate_property(TeamGameTeams, Symbol("school"), school)
        setfield!(o, Symbol("school"), school)
        validate_property(TeamGameTeams, Symbol("conference"), conference)
        setfield!(o, Symbol("conference"), conference)
        validate_property(TeamGameTeams, Symbol("homeAway"), homeAway)
        setfield!(o, Symbol("homeAway"), homeAway)
        validate_property(TeamGameTeams, Symbol("points"), points)
        setfield!(o, Symbol("points"), points)
        validate_property(TeamGameTeams, Symbol("stats"), stats)
        setfield!(o, Symbol("stats"), stats)
        o
    end
end # type TeamGameTeams

const _property_map_TeamGameTeams = Dict{Symbol,Symbol}(Symbol("school")=>Symbol("school"), Symbol("conference")=>Symbol("conference"), Symbol("homeAway")=>Symbol("homeAway"), Symbol("points")=>Symbol("points"), Symbol("stats")=>Symbol("stats"))
const _property_types_TeamGameTeams = Dict{Symbol,String}(Symbol("school")=>"String", Symbol("conference")=>"String", Symbol("homeAway")=>"Bool", Symbol("points")=>"Int32", Symbol("stats")=>"Vector{TeamGameStats}")
Base.propertynames(::Type{ TeamGameTeams }) = collect(keys(_property_map_TeamGameTeams))
Swagger.property_type(::Type{ TeamGameTeams }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamGameTeams[name]))}
Swagger.field_name(::Type{ TeamGameTeams }, property_name::Symbol) =  _property_map_TeamGameTeams[property_name]

function check_required(o::TeamGameTeams)
    true
end

function validate_property(::Type{ TeamGameTeams }, name::Symbol, val)
end
